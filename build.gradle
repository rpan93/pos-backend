buildscript {
	ext {
		springBootVersion = '1.5.3.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath('se.transmode.gradle:gradle-docker:1.2')
		classpath 'net.researchgate:gradle-release:2.4.0'
        classpath('com.bmuschko:gradle-nexus-plugin:2.3.1')

	}
}

plugins {
  id 'net.researchgate.release' version '2.4.0'
}

apply plugin: 'maven'
apply plugin: 'java'
apply plugin: 'eclipse-wtp'
apply plugin: 'org.springframework.boot'
apply plugin: 'docker'
apply plugin: 'net.researchgate.release'
apply plugin: 'com.bmuschko.nexus'

jar {
    baseName = 'app'
}

group = 'com.sma.backend'
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
	maven { url "https://raw.github.com/sophea/mvn-repo/master/releases" }
}

release {
    failOnCommitNeeded = true
    failOnPublishNeeded = true
    failOnSnapshotDependencies = true
    failOnUnversionedFiles = true
    failOnUpdateNeeded = true
    revertOnFail = true
    preCommitText = ''
    preTagCommitMessage = '[Gradle Release Plugin] - pre tag commit: '
    tagCommitMessage = '[Gradle Release Plugin] - creating tag: '
    newVersionCommitMessage = '[Gradle Release Plugin] - new version commit: '
    tagTemplate = '${version}'
    versionPropertyFile = 'gradle.properties'
    versionProperties = []
    buildTasks = ['build']
    
    scmAdapters = [
        net.researchgate.release.GitAdapter,
        net.researchgate.release.SvnAdapter,
        net.researchgate.release.HgAdapter,
        net.researchgate.release.BzrAdapter
    ]

    git {
        requireBranch = 'master'
        pushToRemote = 'origin'
        pushToBranchPrefix = ''
        commitVersionFileOnly = false
        //signTag = false
    }
}

configurations {
	providedRuntime
}

configurations.runtime {
    exclude group: 'ant', module: 'ant'
    exclude group: 'com.ibm.websphere'
    exclude module: 'gae-support'
    exclude group: 'com.google.appengine'
    exclude group: 'org.apache.geronimo.specs'
    exclude group: 'org.apache.tiles', module: 'tiles-extras'
    exclude group: 'org.apache.tiles', module: 'tiles-request-freemarker'
    exclude group: 'org.codehaus.jackson'
    exclude module: 'jamon'
    exclude module: 'spring-instrument'
    exclude group:'org.slf4j', module: 'slf4j-log4j12'
    exclude group: 'org.slf4j', module: 'slf4j-jdk14'

}

dependencies {

    compile('com.sma.security:sm-user-security:1.24') {
        exclude group: 'org.slf4j'
        exclude group : 'javax.servlet'
        exclude group: 'com.google.appengine'
        exclude module: 'spring-social-google'
        exclude group: 'org.springframework.social'
    }
    compile group: 'javax.mail', name: 'mail', version: '1.4.7'
    compile('org.flywaydb:flyway-core')
	compile('org.mariadb.jdbc:mariadb-java-client')
	compile('org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.0')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile("org.springframework.boot:spring-boot-devtools")
	compile('org.apache.commons:commons-lang3:3.5')
	compile('org.apache.commons:commons-io:1.3.2')
	compile('commons-validator:commons-validator:1.6')
	compile('io.springfox:springfox-swagger2:2.7.0')
	compile('io.springfox:springfox-swagger-ui:2.7.0')
	compile('net.sf.barcode4j:barcode4j:2.1')
	compile('com.opencsv:opencsv:3.10')
    compile ('com.fasterxml.jackson.module:jackson-module-jsonSchema:2.8.9')
    compile 'org.apache.commons:commons-dbcp2:2.1.1'
	//runtime('com.h2database:h2')
	
	
	compileOnly('org.projectlombok:lombok')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}

// This creates a flyway patch file with a proper timestamp
task createFlywayPatch() {
    doLast {
        def flywayMigrationsDir = "src/main/resources/db/migration"
        def f = file("$flywayMigrationsDir/V${Calendar.instance.time.time}__POS_XXXX_change_description.sql")
        ant.touch(file: f)
    }
}
// Build Docker Image
task buildDocker(type: Docker, dependsOn: build) {
  push = false 
  maintainer 'Sovanndara Uom <uom.sovanndara@gmail.com>'
  applicationName = jar.baseName
  dockerfile = file('src/main/docker/Dockerfile')
  doFirst {
    copy {
      from jar
      into stageDir
    }
  }
}

task copyJarToCanonicalName(type: Copy) {
    dependsOn build
    from jar // shortcut for createJar.outputs.files
    into 'build/libs/'
    rename { String fileName -> "app.jar" }
}

build.doLast{
    tasks.copyJarToCanonicalName.execute()
}
bootRun {
    addResources = true
    jvmArgs = ["-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005"]
}

extraArchive {
    sources = false
    tests = false
    javadoc = false
}

nexus {
    sign = false
    repositoryUrl = "http://172.17.0.1:8081/repository/maven-releases/"
    snapshotRepositoryUrl = "http://172.17.0.1:8081/repository/maven-snapshots/"
}

